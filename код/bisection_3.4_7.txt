public class GaussSeidelMethod {
    public static void main(String[] args) {
        double[][] coefficients = {{83, 11, -4}, {7, 52, 13}, {3, 8, 29}};
        double[] constants = {95, 104, 71};

        double[] solution = solveSystem(coefficients, constants, 1e-6, 1000);

        System.out.println("Approximate solution:");
        for (int i = 0; i < solution.length; i++) {
            System.out.println("x" + (i + 1) + ": " + solution[i]);
        }
    }

    public static double[] solveSystem(double[][] coefficients, double[] constants, double tol, int maxIter) {
        int n = coefficients.length;
        double[] solution = new double[n];
        double[] previousSolution = new double[n];

        int iterations = 0;
        while (iterations < maxIter) {
            for (int i = 0; i < n; i++) {
                previousSolution[i] = solution[i];
                double sigma = 0.0;
                for (int j = 0; j < n; j++) {
                    if (j != i) {
                        sigma += coefficients[i][j] * solution[j];
                    }
                }
                solution[i] = (constants[i] - sigma) / coefficients[i][i];
            }

            // Check for convergence
            boolean converged = true;
            for (int i = 0; i < n; i++) {
                if (Math.abs(solution[i] - previousSolution[i]) > tol) {
                    converged = false;
                    break;
                }
            }

            if (converged) {
                break;
            }

            iterations++;
        }

        return solution;
    }
}
